---
- name: Установка и восстановление PostgreSQL 14
  hosts: db_servers
  become: yes
  vars:
    pg_version: 14
    db_name: mediawiki
    db_user: wikiuser
    db_password: "StrongPass!"
    db_backup_file: "/backup/mediawiki_backup.sql"
    listen_address: "*"
    allow_network: "192.168.1.0/24"

  tasks:
    - name: Установить зависимости для PostgreSQL
      apt:
        name:
          - gnupg
          - wget
        state: present
        update_cache: yes

    - name: Добавить GPG-ключ PostgreSQL
      ansible.builtin.apt_key:
        url: https://www.postgresql.org/media/keys/ACCC4CF8.asc
        state: present

    - name: Добавить репозиторий PostgreSQL
      ansible.builtin.apt_repository:
        repo: "deb http://apt.postgresql.org/pub/repos/apt {{ ansible_lsb.codename }}-pgdg main"
        state: present

    - name: Обновить кэш apt
      apt:
        update_cache: yes

    - name: Установить PostgreSQL {{ pg_version }}
      apt:
        name: "postgresql-{{ pg_version }}"
        state: present
        update_cache: yes

    - name: Убедиться, что PostgreSQL запущен
      service:
        name: postgresql
        state: started
        enabled: yes

    - name: Настроить listen_addresses
      lineinfile:
        path: "/etc/postgresql/{{ pg_version }}/main/postgresql.conf"
        regexp: "^#?listen_addresses ="
        line: "listen_addresses = '{{ listen_address }}'"

    - name: Разрешить подключения от сети {{ allow_network }}
      lineinfile:
        path: "/etc/postgresql/{{ pg_version }}/main/pg_hba.conf"
        insertafter: EOF
        line: "host all all {{ allow_network }} md5"

    - name: Перезапустить PostgreSQL
      service:
        name: postgresql
        state: restarted


    - name: Создать пользователя базы данных через psql
      shell: |
        sudo -u postgres psql -c "CREATE USER {{ db_user }} WITH PASSWORD '{{ db_password }}' LOGIN;"
      args:
        executable: /bin/bash

    - name: Создать базу данных через createdb
      shell: |
        sudo -u postgres createdb \
          -O "{{ db_user }}" \
          -E UTF8 \
          -l "en_US.UTF-8" \
          -T template0 \
          "{{ db_name }}"
      args:
        executable: /bin/bash

    - name: Восстановить базу из бэкапа (если дамп существует)
      shell: |
        psql -d {{ db_name }} -f {{ db_backup_file }}
      args:
        executable: /bin/bash
      register: restore_result
  
    - name: Проверить результат восстановления
      debug:
        msg: "Результат восстановления: {{ restore_result.stdout | default('нет вывода') }}"

